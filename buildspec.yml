version: 0.2

phases:
  pre_build:
    commands:
      - aws --version
      - echo Logging in to Amazon ECR...
      - $(aws ecr get-login --no-include-email --region $AWS_DEFAULT_REGION)
  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image...
      - if [ -n "$CODEBUILD_RESOLVED_SOURCE_VERSION" ]; then IMAGE_TAG="$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | head -c 8)"; fi
      - echo Using image tag "$IMAGE_TAG"
      - IMAGE_URI="$AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME"
      - echo Building image...
      - docker build -t $IMAGE_URI:latest .
      - echo Tagging image with tag "$IMAGE_TAG"...
      - docker tag $IMAGE_URI:latest $IMAGE_URI:$IMAGE_TAG
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker image to URI "$IMAGE_URI"...
      - docker push $IMAGE_URI:$IMAGE_TAG
      - echo Writing image definitions file...
      - printf '[{"name":"%s","imageUri":"%s"}]' "$IMAGE_REPO_NAME" "$IMAGE_URI:$IMAGE_TAG"

      # Update ECS task definition
      - echo Updating ECS task definition...
      - TASK_DEFINITION=$(aws ecs describe-task-definition --task-definition "$TASK_DEFINITION_NAME" --region "$AWS_DEFAULT_REGION")
      - NEW_TASK=$(echo $TASK_DEFINITION | jq --arg IMAGE "$IMAGE_URI:$IMAGE_TAG" '.taskDefinition | .containerDefinitions[0].image = $IMAGE | del(.taskDefinitionArn) | del(.revision) | del(.status) | del(.requiresAttributes) | del(.compatibilities)| del(.registeredAt)| del(.registeredBy)')
      - aws ecs register-task-definition --region "$AWS_DEFAULT_REGION" --cli-input-json "$NEW_TASK"
      
      # Get the latest task definition ARN
      - LATEST_TASK_DEFINITION_ARN=$(aws ecs list-task-definitions --family $TASK_DEFINITION_NAME --sort DESC | jq -r '.taskDefinitionArns[0]')
      
      # Force redeploy the service with the updated task definition
      - aws ecs update-service --service $SERVICE_NAME --task-definition $LATEST_TASK_DEFINITION_ARN --force-new-deployment --region $AWS_DEFAULT_REGION --cluster $CLUSTER_NAME

